# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CharacterModel {
  id: String!
  name: String!
  description: String!
  debut: Int!
}

type CharacterOperationModel {
  success: Boolean!
  character: CharacterModel
}

type RelationDataModel {
  spark: String
  level: CharacterRelationLevel!
}

enum CharacterRelationLevel {
  TERMINATED
  DEVOLVING
  EVOLVING
  ESTABLISHED
  DEEP
}

type RelationModel {
  type: CharacterRelationType!
  data: RelationDataModel!
}

enum CharacterRelationType {
  FRIENDSHIP
  ANIMOSITY
  KILLED
  KINSHIP
  PEDAGOGY
  VASSALAGE
  WORSHIP
}

type CharacterRelationModel {
  start: CharacterModel!
  end: CharacterModel!
  relation: RelationModel!
}

type CharacterRelationOperationModel {
  success: Boolean!
  characterRelation: CharacterRelationModel
}

type CharacterRelationsResponseModel {
  pageNo: Int!
  pageSize: Int!
  count: Int!
  relations: [CharacterRelationModel!]!
}

type CharactersResponseModel {
  pageNo: Int!
  pageSize: Int!
  count: Int!
  characters: [CharacterModel!]!
}

type RelationshipDataModel {
  spark: String
  level: CharacterRelationLevel!
}

type RelationshipModel {
  type: CharacterRelationType!
  data: RelationshipDataModel!
}

type CharRelationModel {
  start: CharModel!
  end: CharModel!
  relation: RelationshipModel!
}

type CharModel {
  id: String!
  name: String!
  description: String!
  debut: Int!
  relations: [CharRelationModel!]!
}

type CharsListModel {
  pageNo: Int!
  pageSize: Int!
  count: Int!
  chars: [CharModel!]!
  relations: [CharRelationModel!]!
}

type Query {
  getCharacterById(id: String!): CharacterModel!
  getCharacters(pageNo: Int! = 0, pageSize: Int! = 10): CharactersResponseModel!
  getRelations(pageNo: Int! = 0, pageSize: Int! = 10, ids: [String!], relation: CharacterRelationType): CharacterRelationsResponseModel!
  charsList(pageNo: Int! = 0, pageSize: Int! = 10): CharsListModel!
}

type Mutation {
  createCharacter(name: String!, description: String!, debut: Int!): CharacterOperationModel!
  deleteCharacterById(id: String!): CharacterOperationModel!
  updateCharacter(name: String!, description: String!, debut: Int!, id: String!): CharacterOperationModel!
  putCharacterRelation(ids: [String!]!, relation: CharacterRelationType!, spark: String, level: CharacterRelationLevel!): CharacterRelationOperationModel!
  deleteCharacterRelation(pageNo: Int! = 0, pageSize: Int! = 10, ids: [String!], relation: CharacterRelationType): CharacterRelationOperationModel!
}